version: '3.9'

services:
  db:
    image: postgres:15-alpine
    container_name: db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    restart: always

  rabbitmq:
    image: rabbitmq:3.13-management-alpine
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    restart: always

  web:
    build: .
    container_name: web
    command: >
      sh -c "python manage.py makemigrations &&
             python manage.py migrate &&
             gunicorn settings.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - .:/app
      - static_root_volume:/app/static_root
      - media_volume:/app/media
    ports:
        - "8000:8000"
    depends_on:
      - db
      - rabbitmq
    env_file:
      - .env
    restart: always

  celery_worker:
    build: .
    container_name: celery_worker
    command: celery -A settings worker -l info
    volumes:
      - media_volume:/app/media
    depends_on:
      - rabbitmq
    env_file:
      - .env
    restart: always

  nginx:
    image: nginx:1.23.4-alpine
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - static_root_volume:/app/static_root
      - media_volume:/app/media
    depends_on:
      - web
    restart: always

volumes:
  postgres_data:
  static_root_volume:
  media_volume: